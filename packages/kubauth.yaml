

apiVersion: v1alpha1
name: kubauth
tag: 0.1.0-p01
schema:
  parameters:
    properties:
      replicaCount: { type: integer, default: 1 }
      userdb:
        properties:
          logger:
            properties:
              mode: { type: string, default: text, enum: [ "text", "json"] }
              level: { type: string, default: info, enum: [ "error", "info", "debug", "trace"] }
      oidc:
        properties:
          logger:
            properties:
              mode: { type: string, default: text, enum: [ "text", "json"] }
              level: { type: string, default: info, enum: [ "error", "info", "debug", "trace"] }
          ingress:
            properties:
              host: { type: string, default: kubauth }
          sso:
            properties:
              sticky: { type: boolean, default: false }
      data:
        properties:
          oidc:
            properties:
              oidcClients:
                items:
                  properties:
                    name: { type: string, required: true }
                    spec: { type: object, additionalProperties: true, properties: {} }
          userdb:
            properties:
              users:
                items:
                  properties:
                    login: { type: string, required: true }
                    spec: { type: object, additionalProperties: true, properties: {} }
              groups:
                items:
                  properties:
                    name: { type: string, required: true }
                    spec: { type: object, additionalProperties: true, properties: {} }
              groupBindings:
                items:
                  properties:
                    user: { type: string, required: true }
                    group: { type: string, required: true }

  context:
    properties:
      certificateIssuer:
        required: true
        properties:
          public: { type: string, required: true }
      networkPolicies: { type: boolean, required: true }
      ingress:
        required: false
        properties:
          className: { type: string, default: "nginx"}
          domain: { type: string, required: true }
modules:
  - name: main
    source:
      oci:
        repository: quay.io/kubauth/charts/kubauth
        tag: 0.1.0-snapshot
    values: |
      replicaCount: {{ .Parameters.replicaCount }}
      userdb:
        enabled: true
        logger:
          mode: {{ .Parameters.userdb.logger.mode }}
          level: {{ .Parameters.userdb.logger.level  }}
        networkPolicies:
          enabled: {{ .Context.networkPolicies}}
      oidc:
        enabled: true
        logger:
          mode: {{ .Parameters.oidc.logger.mode }}
          level: {{ .Parameters.oidc.logger.level  }}
        server:
          certificateIssuer: {{ .Context.certificateIssuer.public }}
          tls: true
        ingress:
          host: {{ .Parameters.oidc.ingress.host}}.{{.Context.ingress.domain}}
          class: {{ .Context.ingress.className }}
        postLogoutURL: https://{{ .Parameters.oidc.ingress.host}}.{{.Context.ingress.domain}}/index
        issuer: https://{{ .Parameters.oidc.ingress.host}}.{{.Context.ingress.domain}}
        networkPolicies:
          enabled: {{ .Context.networkPolicies}}
        sso:
          cleanupPeriod: 5m
          sticky: {{ .Parameters.oidc.sso.sticky }}
  - name: data
    source:
      oci:
        repository: quay.io/kubauth/charts/kubauth
        tag: 0.1.0-snapshot
    dependsOn:
      - main
    values: |
      userdb:
        enabled: false
      oidc:
        enabled: false
      data:
        enabled: true
        oidc:
          oidcClients:
          {{- range .Parameters.data.oidc.oidcClients }}
            - name: {{ .name }}
              spec: 
              {{- toYaml .spec | nindent 10 }}
          {{ end }}
        userdb:
          users:
          {{- range .Parameters.data.userdb.users }}
            - login: {{ .login }}
              spec: 
              {{- toYaml .spec | nindent 10 }}
          {{ end }}
          groups:
          {{- range .Parameters.data.userdb.groups }}
            - name: {{ .name }}
              spec: 
              {{- toYaml .spec | nindent 10 }}
          {{ end }}
          groupBindings:
          {{- range .Parameters.data.userdb.groupBindings }}
            - user: {{ .user }}
              group: {{ .group }}
          {{ end }}
roles:
  - oidc

